{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Git/test-project/frontend/src/components/AuthWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/components/AuthWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthWindow = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const toggleAuthMode = () => {\n    setIsLogin(!isLogin);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    isLogin ? handleLogin() : handleRegister();\n  };\n  const checkUserExists = async email => {\n    try {\n      let response = await fetch(`/users/${email}`);\n      return response.ok;\n    } catch (error) {\n      console.error('Ошибка запроса:', error);\n      return false;\n    }\n  };\n  const handleLogin = async () => {\n    if (!email || !password) {\n      alert('Заполните все поля!');\n      return;\n    }\n    if (await checkUserExists(email)) {\n      try {\n        let response = await fetch('/auth/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password\n          })\n        });\n        let data = await response.json();\n        if (response.ok) {\n          alert('Добро пожаловать, ' + data.email);\n          localStorage.setItem('userEmail', data.email);\n        } else {\n          alert('Ошибка: ' + data.detail);\n        }\n      } catch (error) {\n        console.error('Ошибка запроса:', error);\n      }\n      return;\n    }\n  };\n  const handleRegister = async () => {\n    if (!email || !password) {\n      alert('Заполните все поля!');\n      return;\n    }\n    if (await checkUserExists(email)) {\n      alert('Пользователь уже существует!');\n      return;\n    }\n    let userData = {\n      email,\n      password\n    };\n    console.log(userData);\n    try {\n      let response = await fetch('/users/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (response.ok) {\n        alert('Регистрация успешна!');\n      } else {\n        let errorData = await response.json();\n        alert('Ошибка: ' + errorData.detail);\n      }\n    } catch (error) {\n      console.error('Ошибка запроса:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"reg-form d-flex flex-column align-items-center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"auth-title\",\n      children: isLogin ? 'Вход' : 'Регистрация'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"auth-input\",\n      type: \"email\",\n      placeholder: \"example@email.com\",\n      required: true,\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"auth-input\",\n      type: \"password\",\n      placeholder: \"password\",\n      required: true,\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"auth-with\",\n      children: isLogin ? 'Авторизоваться с помощью' : 'Создать аккаунт с помощью'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-with-icons\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"round-img github\",\n        src: \"/assets/images/github-logo.svg\",\n        alt: \"GitHub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"round-img google\",\n        src: \"/assets/images/google-logo.svg\",\n        alt: \"Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"round-img vk\",\n        src: \"/assets/images/vk-logo.svg\",\n        alt: \"VK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"round-img yandex\",\n        src: \"/assets/images/yandex-logo.svg\",\n        alt: \"Yandex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"auth-submit\",\n      type: \"submit\",\n      value: isLogin ? 'Подтвердить' : 'Зарегистрироваться'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"auth-toggle-link\",\n      onClick: toggleAuthMode,\n      children: isLogin ? 'У меня уже есть аккаунт' : 'Создать новый аккаунт'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this);\n};\n_s(AuthWindow, \"OdiyToG8RcoMVxLdggHnmpTy/bk=\");\n_c = AuthWindow;\nexport default AuthWindow;\nvar _c;\n$RefreshReg$(_c, \"AuthWindow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AuthWindow","_s","isLogin","setIsLogin","email","setEmail","password","setPassword","toggleAuthMode","handleSubmit","event","preventDefault","handleLogin","handleRegister","checkUserExists","response","fetch","ok","error","console","alert","method","headers","body","JSON","stringify","data","json","localStorage","setItem","detail","userData","log","errorData","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","value","onChange","e","target","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/Git/test-project/frontend/src/components/AuthWindow.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport '../styles/components/AuthWindow.css'\n\nconst AuthWindow = () => {\n\tconst [isLogin, setIsLogin] = useState(true)\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\n\tconst toggleAuthMode = () => {\n\t\tsetIsLogin(!isLogin)\n\t}\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault()\n\t\tisLogin ? handleLogin() : handleRegister()\n\t}\n\n\tconst checkUserExists = async email => {\n\t\ttry {\n\t\t\tlet response = await fetch(`/users/${email}`)\n\t\t\treturn response.ok\n\t\t} catch (error) {\n\t\t\tconsole.error('Ошибка запроса:', error)\n\t\t\treturn false\n\t\t}\n\t}\n\n\tconst handleLogin = async () => {\n\t\tif (!email || !password) {\n\t\t\talert('Заполните все поля!')\n\t\t\treturn\n\t\t}\n\t\tif (await checkUserExists(email)) {\n\t\t\ttry {\n\t\t\t\tlet response = await fetch('/auth/', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\tbody: JSON.stringify({ email, password }),\n\t\t\t\t})\n\n\t\t\t\tlet data = await response.json()\n\t\t\t\tif (response.ok) {\n\t\t\t\t\talert('Добро пожаловать, ' + data.email)\n\t\t\t\t\tlocalStorage.setItem('userEmail', data.email)\n\t\t\t\t} else {\n\t\t\t\t\talert('Ошибка: ' + data.detail)\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Ошибка запроса:', error)\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t}\n\n\tconst handleRegister = async () => {\n\t\tif (!email || !password) {\n\t\t\talert('Заполните все поля!')\n\t\t\treturn\n\t\t}\n\t\tif (await checkUserExists(email)) {\n\t\t\talert('Пользователь уже существует!')\n\t\t\treturn\n\t\t}\n\n\t\tlet userData = { email, password }\n\t\tconsole.log(userData)\n\n\t\ttry {\n\t\t\tlet response = await fetch('/users/', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify(userData),\n\t\t\t})\n\n\t\t\tif (response.ok) {\n\t\t\t\talert('Регистрация успешна!')\n\t\t\t} else {\n\t\t\t\tlet errorData = await response.json()\n\t\t\t\talert('Ошибка: ' + errorData.detail)\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Ошибка запроса:', error)\n\t\t}\n\t}\n\n\treturn (\n\t\t<form\n\t\t\tclassName='reg-form d-flex flex-column align-items-center'\n\t\t\tonSubmit={handleSubmit}\n\t\t>\n\t\t\t<p className='auth-title'>{isLogin ? 'Вход' : 'Регистрация'}</p>\n\t\t\t<input\n\t\t\t\tclassName='auth-input'\n\t\t\t\ttype='email'\n\t\t\t\tplaceholder='example@email.com'\n\t\t\t\trequired\n\t\t\t\tvalue={email}\n\t\t\t\tonChange={e => setEmail(e.target.value)}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\tclassName='auth-input'\n\t\t\t\ttype='password'\n\t\t\t\tplaceholder='password'\n\t\t\t\trequired\n\t\t\t\tvalue={password}\n\t\t\t\tonChange={e => setPassword(e.target.value)}\n\t\t\t/>\n\t\t\t<p className='auth-with'>\n\t\t\t\t{isLogin ? 'Авторизоваться с помощью' : 'Создать аккаунт с помощью'}\n\t\t\t</p>\n\t\t\t<div className='auth-with-icons'>\n\t\t\t\t<img\n\t\t\t\t\tclassName='round-img github'\n\t\t\t\t\tsrc='/assets/images/github-logo.svg'\n\t\t\t\t\talt='GitHub'\n\t\t\t\t/>\n\t\t\t\t<img\n\t\t\t\t\tclassName='round-img google'\n\t\t\t\t\tsrc='/assets/images/google-logo.svg'\n\t\t\t\t\talt='Google'\n\t\t\t\t/>\n\t\t\t\t<img\n\t\t\t\t\tclassName='round-img vk'\n\t\t\t\t\tsrc='/assets/images/vk-logo.svg'\n\t\t\t\t\talt='VK'\n\t\t\t\t/>\n\t\t\t\t<img\n\t\t\t\t\tclassName='round-img yandex'\n\t\t\t\t\tsrc='/assets/images/yandex-logo.svg'\n\t\t\t\t\talt='Yandex'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\tclassName='auth-submit'\n\t\t\t\ttype='submit'\n\t\t\t\tvalue={isLogin ? 'Подтвердить' : 'Зарегистрироваться'}\n\t\t\t/>\n\t\t\t<p className='auth-toggle-link' onClick={toggleAuthMode}>\n\t\t\t\t{isLogin ? 'У меня уже есть аккаунт' : 'Создать новый аккаунт'}\n\t\t\t</p>\n\t\t</form>\n\t)\n}\n\nexport default AuthWindow\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}