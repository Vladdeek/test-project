{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Git/test-project/frontend/src/components/AuthWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/components/AuthWindow.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthWindow = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true); // Состояние для переключения между авторизацией и регистрацией\n  // Функция для переключения состояния\n  const toggleAuthMode = () => {\n    setIsLogin(!isLogin);\n  };\n\n  // Функция для обработки отправки формы\n  const handleSubmit = event => {\n    event.preventDefault();\n    isLogin ? handleLogin() : handleRegister();\n  };\n  const checkUserExists = async () => {\n    try {\n      let response = await fetch(`/users/${name}`);\n      return response.ok; // true, если пользователь найден\n    } catch (error) {\n      console.error('Ошибка запроса:', error);\n      return false;\n    }\n  };\n  const handleLogin = async () => {\n    if (!email || !password) {\n      alert('Заполните все поля!');\n      return;\n    }\n    try {\n      let response = await fetch('/auth/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      let data = await response.json();\n      if (response.ok) {\n        alert('Добро пожаловать, ' + data.email);\n        localStorage.setItem('userEmail', user.email);\n      } else {\n        alert('Ошибка: ' + data.detail);\n      }\n    } catch (error) {\n      console.error('Ошибка запроса:', error);\n    }\n  };\n  const handleRegister = async () => {\n    if (!email || !password) {\n      alert('Заполните все поля!');\n      return;\n    }\n    if (await checkUserExists(email)) {\n      alert('Пользователь уже существует!');\n      return;\n    }\n    let userData = {\n      email,\n      password\n    };\n    console.log(userData);\n    try {\n      let response = await fetch('/users/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (response.ok) {\n        hideRegAuthModal();\n      } else {\n        let errorData = await response.json();\n        alert('Ошибка: ' + errorData.detail);\n      }\n    } catch (error) {\n      console.error('Ошибка запроса:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"reg-form d-flex flex-column align-items-center\",\n      onSubmit: handleSubmit // Обработчик формы\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-title\",\n        children: isLogin ? 'Вход' : 'Регистрация'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"auth-input\",\n        type: \"email\",\n        placeholder: \"example@email.com\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"auth-input\",\n        type: \"password\",\n        placeholder: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-with\",\n        children: isLogin ? 'Авторизоваться с помощью' : 'Создать аккаунт с помощью'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-with-icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"round-img github\",\n          src: \"/assets/images/github-logo.svg\",\n          alt: \"GitHub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"round-img google\",\n          src: \"/assets/images/google-logo.svg\",\n          alt: \"Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"round-img vk\",\n          src: \"/assets/images/vk-logo.svg\",\n          alt: \"VK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"round-img yandex\",\n          src: \"/assets/images/yandex-logo.svg\",\n          alt: \"Yandex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"auth-submit\",\n        type: \"submit\",\n        value: isLogin ? 'Подтвердить' : 'Зарегистрироваться'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-toggle-link\",\n        onClick: toggleAuthMode,\n        children: isLogin ? 'У меня уже есть аккаунт' : 'Создать новый аккаунт'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_s(AuthWindow, \"juHMKC6x2j1wnRvCiB5VrABnZyE=\");\n_c = AuthWindow;\nexport default AuthWindow;\nvar _c;\n$RefreshReg$(_c, \"AuthWindow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthWindow","_s","isLogin","setIsLogin","toggleAuthMode","handleSubmit","event","preventDefault","handleLogin","handleRegister","checkUserExists","response","fetch","name","ok","error","console","email","password","alert","method","headers","body","JSON","stringify","data","json","localStorage","setItem","user","detail","userData","log","hideRegAuthModal","errorData","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","src","alt","value","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/Git/test-project/frontend/src/components/AuthWindow.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport '../styles/components/AuthWindow.css'\n\nconst AuthWindow = () => {\n\tconst [isLogin, setIsLogin] = useState(true) // Состояние для переключения между авторизацией и регистрацией\n\t// Функция для переключения состояния\n\tconst toggleAuthMode = () => {\n\t\tsetIsLogin(!isLogin)\n\t}\n\n\t// Функция для обработки отправки формы\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault()\n\t\tisLogin ? handleLogin() : handleRegister()\n\t}\n\n\tconst checkUserExists = async () => {\n\t\ttry {\n\t\t\tlet response = await fetch(`/users/${name}`)\n\t\t\treturn response.ok // true, если пользователь найден\n\t\t} catch (error) {\n\t\t\tconsole.error('Ошибка запроса:', error)\n\t\t\treturn false\n\t\t}\n\t}\n\n\tconst handleLogin = async () => {\n\t\tif (!email || !password) {\n\t\t\talert('Заполните все поля!')\n\t\t\treturn\n\t\t}\n\t\ttry {\n\t\t\tlet response = await fetch('/auth/', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify({ email: email, password: password }),\n\t\t\t})\n\n\t\t\tlet data = await response.json()\n\t\t\tif (response.ok) {\n\t\t\t\talert('Добро пожаловать, ' + data.email)\n\t\t\t\tlocalStorage.setItem('userEmail', user.email)\n\t\t\t} else {\n\t\t\t\talert('Ошибка: ' + data.detail)\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Ошибка запроса:', error)\n\t\t}\n\t}\n\n\tconst handleRegister = async () => {\n\t\tif (!email || !password) {\n\t\t\talert('Заполните все поля!')\n\t\t\treturn\n\t\t}\n\t\tif (await checkUserExists(email)) {\n\t\t\talert('Пользователь уже существует!')\n\t\t\treturn\n\t\t}\n\n\t\tlet userData = { email, password }\n\t\tconsole.log(userData)\n\n\t\ttry {\n\t\t\tlet response = await fetch('/users/', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify(userData),\n\t\t\t})\n\n\t\t\tif (response.ok) {\n\t\t\t\thideRegAuthModal()\n\t\t\t} else {\n\t\t\t\tlet errorData = await response.json()\n\t\t\t\talert('Ошибка: ' + errorData.detail)\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Ошибка запроса:', error)\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<form\n\t\t\t\tclassName='reg-form d-flex flex-column align-items-center'\n\t\t\t\tonSubmit={handleSubmit} // Обработчик формы\n\t\t\t>\n\t\t\t\t<p className='auth-title'>{isLogin ? 'Вход' : 'Регистрация'}</p>\n\t\t\t\t<input\n\t\t\t\t\tclassName='auth-input'\n\t\t\t\t\ttype='email'\n\t\t\t\t\tplaceholder='example@email.com'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName='auth-input'\n\t\t\t\t\ttype='password'\n\t\t\t\t\tplaceholder='password'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\n\t\t\t\t<p className='auth-with'>\n\t\t\t\t\t{isLogin ? 'Авторизоваться с помощью' : 'Создать аккаунт с помощью'}\n\t\t\t\t</p>\n\n\t\t\t\t<div className='auth-with-icons'>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName='round-img github'\n\t\t\t\t\t\tsrc='/assets/images/github-logo.svg'\n\t\t\t\t\t\talt='GitHub'\n\t\t\t\t\t/>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName='round-img google'\n\t\t\t\t\t\tsrc='/assets/images/google-logo.svg'\n\t\t\t\t\t\talt='Google'\n\t\t\t\t\t/>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName='round-img vk'\n\t\t\t\t\t\tsrc='/assets/images/vk-logo.svg'\n\t\t\t\t\t\talt='VK'\n\t\t\t\t\t/>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName='round-img yandex'\n\t\t\t\t\t\tsrc='/assets/images/yandex-logo.svg'\n\t\t\t\t\t\talt='Yandex'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\tclassName='auth-submit'\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tvalue={isLogin ? 'Подтвердить' : 'Зарегистрироваться'}\n\t\t\t\t/>\n\t\t\t\t<p className='auth-toggle-link' onClick={toggleAuthMode}>\n\t\t\t\t\t{isLogin ? 'У меня уже есть аккаунт' : 'Создать новый аккаунт'}\n\t\t\t\t</p>\n\t\t\t</form>\n\t\t</>\n\t)\n}\n\nexport default AuthWindow\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}